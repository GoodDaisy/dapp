/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "BalancerDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BalancerDeployer__factory>;
    getContractFactory(
      name: "IBalancerBasePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBalancerBasePool__factory>;
    getContractFactory(
      name: "IBalancerVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBalancerVault__factory>;
    getContractFactory(
      name: "IBalancerWeightedPoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBalancerWeightedPoolFactory__factory>;
    getContractFactory(
      name: "CreatorsNode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CreatorsNode__factory>;
    getContractFactory(
      name: "CreatorsNodeDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CreatorsNodeDeployer__factory>;
    getContractFactory(
      name: "DeFiNode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DeFiNode__factory>;
    getContractFactory(
      name: "DeFiNodeDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DeFiNodeDeployer__factory>;
    getContractFactory(
      name: "EducateNode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EducateNode__factory>;
    getContractFactory(
      name: "EducateNodeDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EducateNodeDeployer__factory>;
    getContractFactory(
      name: "SocialNode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SocialNode__factory>;
    getContractFactory(
      name: "SocialNodeDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SocialNodeDeployer__factory>;
    getContractFactory(
      name: "VampireNode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VampireNode__factory>;
    getContractFactory(
      name: "VampireNodeDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VampireNodeDeployer__factory>;
    getContractFactory(
      name: "TAHOETHHuntingGround",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TAHOETHHuntingGround__factory>;
    getContractFactory(
      name: "TAHOETHHuntingGroundDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TAHOETHHuntingGroundDeployer__factory>;
    getContractFactory(
      name: "ISubDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISubDeployer__factory>;
    getContractFactory(
      name: "ITreasuryVesterDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITreasuryVesterDeployer__factory>;
    getContractFactory(
      name: "MerkleFactoryDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MerkleFactoryDeployer__factory>;
    getContractFactory(
      name: "TimelockDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimelockDeployer__factory>;
    getContractFactory(
      name: "TreasuryVesterDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TreasuryVesterDeployer__factory>;
    getContractFactory(
      name: "VoteWithFriendsDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VoteWithFriendsDeployer__factory>;
    getContractFactory(
      name: "ClaimWithFriends",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClaimWithFriends__factory>;
    getContractFactory(
      name: "ExpiringMerkleDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExpiringMerkleDistributor__factory>;
    getContractFactory(
      name: "ExpiringMerkleDistributorFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExpiringMerkleDistributorFactory__factory>;
    getContractFactory(
      name: "IExpiringMerkleDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExpiringMerkleDistributor__factory>;
    getContractFactory(
      name: "TokenWithCompoundStyleDelegation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenWithCompoundStyleDelegation__factory>;
    getContractFactory(
      name: "VoteWithFriends",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VoteWithFriends__factory>;
    getContractFactory(
      name: "GovernorBravoDelegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoDelegate__factory>;
    getContractFactory(
      name: "GovernorBravoDelegator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoDelegator__factory>;
    getContractFactory(
      name: "CompInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompInterface__factory>;
    getContractFactory(
      name: "GovernorBravoDelegateStorageV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoDelegateStorageV1__factory>;
    getContractFactory(
      name: "GovernorBravoDelegateStorageV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoDelegateStorageV2__factory>;
    getContractFactory(
      name: "GovernorBravoDelegatorStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoDelegatorStorage__factory>;
    getContractFactory(
      name: "GovernorBravoEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoEvents__factory>;
    getContractFactory(
      name: "TimelockInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimelockInterface__factory>;
    getContractFactory(
      name: "IMerkleDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMerkleDistributor__factory>;
    getContractFactory(
      name: "MerkleDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MerkleDistributor__factory>;
    getContractFactory(
      name: "Timelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Timelock__factory>;
    getContractFactory(
      name: "TreasuryVester",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TreasuryVester__factory>;
    getContractFactory(
      name: "BaseStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseStrategy__factory>;
    getContractFactory(
      name: "BaseStrategyInitializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseStrategyInitializable__factory>;
    getContractFactory(
      name: "StrategyAPI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StrategyAPI__factory>;
    getContractFactory(
      name: "VaultAPI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultAPI__factory>;
    getContractFactory(
      name: "GameParameters",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GameParameters__factory>;
    getContractFactory(
      name: "Node",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Node__factory>;
    getContractFactory(
      name: "CreatorsNodeVeTaho",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CreatorsNodeVeTaho__factory>;
    getContractFactory(
      name: "DeFiNodeVeTaho",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DeFiNodeVeTaho__factory>;
    getContractFactory(
      name: "EducateNodeVeTaho",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EducateNodeVeTaho__factory>;
    getContractFactory(
      name: "SocialNodeVeTaho",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SocialNodeVeTaho__factory>;
    getContractFactory(
      name: "VampireNodeVeTaho",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VampireNodeVeTaho__factory>;
    getContractFactory(
      name: "VeTaho",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VeTaho__factory>;
    getContractFactory(
      name: "EmergencyGovernable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EmergencyGovernable__factory>;
    getContractFactory(
      name: "TimelockGovernorWithEmergencyGovernance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimelockGovernorWithEmergencyGovernance__factory>;
    getContractFactory(
      name: "EmergencyPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EmergencyPausable__factory>;
    getContractFactory(
      name: "Taho",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Taho__factory>;
    getContractFactory(
      name: "TahoGovernorBravoDelegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TahoGovernorBravoDelegate__factory>;
    getContractFactory(
      name: "TahoGovernorBravoDelegateStorageV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TahoGovernorBravoDelegateStorageV2__factory>;
    getContractFactory(
      name: "TahoGovernorBravoDelegator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TahoGovernorBravoDelegator__factory>;
    getContractFactory(
      name: "TahoTimelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TahoTimelock__factory>;
    getContractFactory(
      name: "FeePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeePool__factory>;
    getContractFactory(
      name: "HuntingGround",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HuntingGround__factory>;
    getContractFactory(
      name: "HuntingGroundRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HuntingGroundRegistry__factory>;
    getContractFactory(
      name: "IHuntingGround",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHuntingGround__factory>;
    getContractFactory(
      name: "IHuntingGroundRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHuntingGroundRegistry__factory>;
    getContractFactory(
      name: "IYearnRegistryV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IYearnRegistryV2__factory>;
    getContractFactory(
      name: "IYearnVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IYearnVault__factory>;
    getContractFactory(
      name: "RewardPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RewardPool__factory>;
    getContractFactory(
      name: "YearnFeePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YearnFeePool__factory>;
    getContractFactory(
      name: "ITahoDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITahoDeployer__factory>;
    getContractFactory(
      name: "IAcceptTimelockAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAcceptTimelockAdmin__factory>;
    getContractFactory(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwnable__factory>;
    getContractFactory(
      name: "ITimelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITimelock__factory>;
    getContractFactory(
      name: "TahoDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TahoDeployer__factory>;
    getContractFactory(
      name: "MockFeePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockFeePool__factory>;
    getContractFactory(
      name: "MockReentrancy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockReentrancy__factory>;
    getContractFactory(
      name: "MockRewardPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockRewardPool__factory>;
    getContractFactory(
      name: "MockToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockToken__factory>;
    getContractFactory(
      name: "IGovernableApprovalTarget",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGovernableApprovalTarget__factory>;
    getContractFactory(
      name: "MockTransferrer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockTransferrer__factory>;
    getContractFactory(
      name: "MockYearnVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockYearnVault__factory>;
    getContractFactory(
      name: "MockZrxExchangeProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockZrxExchangeProxy__factory>;
    getContractFactory(
      name: "TestCustomERC20Deployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestCustomERC20Deployer__factory>;
    getContractFactory(
      name: "TestTahoDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestTahoDeployer__factory>;
    getContractFactory(
      name: "CustomERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CustomERC20__factory>;
    getContractFactory(
      name: "IMintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMintable__factory>;
    getContractFactory(
      name: "ITransferRestricted",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITransferRestricted__factory>;
    getContractFactory(
      name: "EIP712Helper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712Helper__factory>;
    getContractFactory(
      name: "ApprovalTarget",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ApprovalTarget__factory>;
    getContractFactory(
      name: "GovernableApprovalTarget",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernableApprovalTarget__factory>;
    getContractFactory(
      name: "IApprovalTarget",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IApprovalTarget__factory>;
    getContractFactory(
      name: "IEIP2612Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEIP2612Token__factory>;
    getContractFactory(
      name: "IGovernableApprovalTarget",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGovernableApprovalTarget__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "BalancerDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BalancerDeployer>;
    getContractAt(
      name: "IBalancerBasePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBalancerBasePool>;
    getContractAt(
      name: "IBalancerVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBalancerVault>;
    getContractAt(
      name: "IBalancerWeightedPoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBalancerWeightedPoolFactory>;
    getContractAt(
      name: "CreatorsNode",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CreatorsNode>;
    getContractAt(
      name: "CreatorsNodeDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CreatorsNodeDeployer>;
    getContractAt(
      name: "DeFiNode",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DeFiNode>;
    getContractAt(
      name: "DeFiNodeDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DeFiNodeDeployer>;
    getContractAt(
      name: "EducateNode",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EducateNode>;
    getContractAt(
      name: "EducateNodeDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EducateNodeDeployer>;
    getContractAt(
      name: "SocialNode",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SocialNode>;
    getContractAt(
      name: "SocialNodeDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SocialNodeDeployer>;
    getContractAt(
      name: "VampireNode",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VampireNode>;
    getContractAt(
      name: "VampireNodeDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VampireNodeDeployer>;
    getContractAt(
      name: "TAHOETHHuntingGround",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TAHOETHHuntingGround>;
    getContractAt(
      name: "TAHOETHHuntingGroundDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TAHOETHHuntingGroundDeployer>;
    getContractAt(
      name: "ISubDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISubDeployer>;
    getContractAt(
      name: "ITreasuryVesterDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITreasuryVesterDeployer>;
    getContractAt(
      name: "MerkleFactoryDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MerkleFactoryDeployer>;
    getContractAt(
      name: "TimelockDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TimelockDeployer>;
    getContractAt(
      name: "TreasuryVesterDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TreasuryVesterDeployer>;
    getContractAt(
      name: "VoteWithFriendsDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VoteWithFriendsDeployer>;
    getContractAt(
      name: "ClaimWithFriends",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClaimWithFriends>;
    getContractAt(
      name: "ExpiringMerkleDistributor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExpiringMerkleDistributor>;
    getContractAt(
      name: "ExpiringMerkleDistributorFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExpiringMerkleDistributorFactory>;
    getContractAt(
      name: "IExpiringMerkleDistributor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExpiringMerkleDistributor>;
    getContractAt(
      name: "TokenWithCompoundStyleDelegation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenWithCompoundStyleDelegation>;
    getContractAt(
      name: "VoteWithFriends",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VoteWithFriends>;
    getContractAt(
      name: "GovernorBravoDelegate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoDelegate>;
    getContractAt(
      name: "GovernorBravoDelegator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoDelegator>;
    getContractAt(
      name: "CompInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CompInterface>;
    getContractAt(
      name: "GovernorBravoDelegateStorageV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoDelegateStorageV1>;
    getContractAt(
      name: "GovernorBravoDelegateStorageV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoDelegateStorageV2>;
    getContractAt(
      name: "GovernorBravoDelegatorStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoDelegatorStorage>;
    getContractAt(
      name: "GovernorBravoEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoEvents>;
    getContractAt(
      name: "TimelockInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TimelockInterface>;
    getContractAt(
      name: "IMerkleDistributor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMerkleDistributor>;
    getContractAt(
      name: "MerkleDistributor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MerkleDistributor>;
    getContractAt(
      name: "Timelock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Timelock>;
    getContractAt(
      name: "TreasuryVester",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TreasuryVester>;
    getContractAt(
      name: "BaseStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseStrategy>;
    getContractAt(
      name: "BaseStrategyInitializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseStrategyInitializable>;
    getContractAt(
      name: "StrategyAPI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StrategyAPI>;
    getContractAt(
      name: "VaultAPI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultAPI>;
    getContractAt(
      name: "GameParameters",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GameParameters>;
    getContractAt(
      name: "Node",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Node>;
    getContractAt(
      name: "CreatorsNodeVeTaho",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CreatorsNodeVeTaho>;
    getContractAt(
      name: "DeFiNodeVeTaho",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DeFiNodeVeTaho>;
    getContractAt(
      name: "EducateNodeVeTaho",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EducateNodeVeTaho>;
    getContractAt(
      name: "SocialNodeVeTaho",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SocialNodeVeTaho>;
    getContractAt(
      name: "VampireNodeVeTaho",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VampireNodeVeTaho>;
    getContractAt(
      name: "VeTaho",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VeTaho>;
    getContractAt(
      name: "EmergencyGovernable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EmergencyGovernable>;
    getContractAt(
      name: "TimelockGovernorWithEmergencyGovernance",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TimelockGovernorWithEmergencyGovernance>;
    getContractAt(
      name: "EmergencyPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EmergencyPausable>;
    getContractAt(
      name: "Taho",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Taho>;
    getContractAt(
      name: "TahoGovernorBravoDelegate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TahoGovernorBravoDelegate>;
    getContractAt(
      name: "TahoGovernorBravoDelegateStorageV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TahoGovernorBravoDelegateStorageV2>;
    getContractAt(
      name: "TahoGovernorBravoDelegator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TahoGovernorBravoDelegator>;
    getContractAt(
      name: "TahoTimelock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TahoTimelock>;
    getContractAt(
      name: "FeePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeePool>;
    getContractAt(
      name: "HuntingGround",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HuntingGround>;
    getContractAt(
      name: "HuntingGroundRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HuntingGroundRegistry>;
    getContractAt(
      name: "IHuntingGround",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IHuntingGround>;
    getContractAt(
      name: "IHuntingGroundRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IHuntingGroundRegistry>;
    getContractAt(
      name: "IYearnRegistryV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IYearnRegistryV2>;
    getContractAt(
      name: "IYearnVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IYearnVault>;
    getContractAt(
      name: "RewardPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RewardPool>;
    getContractAt(
      name: "YearnFeePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.YearnFeePool>;
    getContractAt(
      name: "ITahoDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITahoDeployer>;
    getContractAt(
      name: "IAcceptTimelockAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAcceptTimelockAdmin>;
    getContractAt(
      name: "IOwnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOwnable>;
    getContractAt(
      name: "ITimelock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITimelock>;
    getContractAt(
      name: "TahoDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TahoDeployer>;
    getContractAt(
      name: "MockFeePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockFeePool>;
    getContractAt(
      name: "MockReentrancy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockReentrancy>;
    getContractAt(
      name: "MockRewardPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockRewardPool>;
    getContractAt(
      name: "MockToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockToken>;
    getContractAt(
      name: "IGovernableApprovalTarget",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGovernableApprovalTarget>;
    getContractAt(
      name: "MockTransferrer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockTransferrer>;
    getContractAt(
      name: "MockYearnVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockYearnVault>;
    getContractAt(
      name: "MockZrxExchangeProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockZrxExchangeProxy>;
    getContractAt(
      name: "TestCustomERC20Deployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestCustomERC20Deployer>;
    getContractAt(
      name: "TestTahoDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestTahoDeployer>;
    getContractAt(
      name: "CustomERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CustomERC20>;
    getContractAt(
      name: "IMintable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMintable>;
    getContractAt(
      name: "ITransferRestricted",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITransferRestricted>;
    getContractAt(
      name: "EIP712Helper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712Helper>;
    getContractAt(
      name: "ApprovalTarget",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ApprovalTarget>;
    getContractAt(
      name: "GovernableApprovalTarget",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernableApprovalTarget>;
    getContractAt(
      name: "IApprovalTarget",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IApprovalTarget>;
    getContractAt(
      name: "IEIP2612Token",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEIP2612Token>;
    getContractAt(
      name: "IGovernableApprovalTarget",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGovernableApprovalTarget>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
