/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  YearnFeePool,
  YearnFeePoolInterface,
} from "../../../contracts/hunting-grounds/YearnFeePool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "vault_",
        type: "address",
      },
      {
        internalType: "address",
        name: "want_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "targetManagementFee_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDuration_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WITHDRAW_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accruedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cachedChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cachedDomainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRateLastUpdated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTVL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountPermitted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permitAndDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "typeHashDigest",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "recoverFromTypeHashSignature",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerShareStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sharesPerDepositedUnderlying",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetManagementFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerSharePaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract VaultAPI",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "want",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountShares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountShares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountShares",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101206040526107d0600355670de0b6b3a76400006006555f6007555f6008555f600d553480156200002f575f80fd5b50604051620036d9380380620036d9833981810160405281019062000055919062000294565b808281608081815250508060038190555050504660a0818152505062000080620000fa60201b60201c565b60c081815250508373ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff16815250508273ffffffffffffffffffffffffffffffffffffffff166101008173ffffffffffffffffffffffffffffffffffffffff1681525050505050506200039a565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6200012c6200017d60201b60201c565b8051906020012062000143620001ba60201b60201c565b805190602001204630604051602001620001629594939291906200033f565b60405160208183030381529060405280519060200120905090565b60606040518060400160405280600c81526020017f596561726e466565506f6f6c0000000000000000000000000000000000000000815250905090565b60606040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200022682620001fb565b9050919050565b62000238816200021a565b811462000243575f80fd5b50565b5f8151905062000256816200022d565b92915050565b5f819050919050565b62000270816200025c565b81146200027b575f80fd5b50565b5f815190506200028e8162000265565b92915050565b5f805f8060808587031215620002af57620002ae620001f7565b5b5f620002be8782880162000246565b9450506020620002d18782880162000246565b9350506040620002e4878288016200027e565b9250506060620002f7878288016200027e565b91505092959194509250565b5f819050919050565b620003178162000303565b82525050565b62000328816200025c565b82525050565b62000339816200021a565b82525050565b5f60a082019050620003545f8301886200030c565b6200036360208301876200030c565b6200037260408301866200030c565b6200038160608301856200031d565b6200039060808301846200032e565b9695505050505050565b60805160a05160c05160e051610100516132a6620004335f395f818161088301528181610b2f01528181610fe901528181611368015281816114cd015261153a01525f8181610e4101528181610ece015281816111e40152818161120d015281816112c701528181611518015261158101525f8181610c4f0152610fa701525f8181610c280152610dd401525f61094901526132a65ff3fe608060405234801561000f575f80fd5b50600436106101f7575f3560e01c806376c5d75811610118578063b4f94b2e116100ab578063d957e4af1161007a578063d957e4af14610609578063dadd997114610627578063e398904614610645578063ebe2b12b14610675578063fbfa77cf14610693576101f7565b8063b4f94b2e1461057f578063b6b55f251461059d578063c8f33c91146105cd578063d0e30db0146105eb576101f7565b8063818ae1ce116100e7578063818ae1ce146104f5578063978bbdb91461052557806397b3fcaa14610543578063aee8372714610561576101f7565b806376c5d7581461046b578063771da5c5146104895780637b0a47ee146104a75780637ecebe00146104c5576101f7565b80631f1fcd5111610190578063446a2ec81161015f578063446a2ec8146103cf578063682c2058146103ed5780636e553f651461040b57806370a082311461043b576101f7565b80631f1fcd51146103455780632e1a7d4d146103635780633644e515146103935780633ccfd60b146103b1576101f7565b80630ab747f0116101cc5780630ab747f0146102bb5780630fb5a6b4146102d957806318160ddd146102f7578063188e674314610315576101f7565b80628cc262146101fb578062f714ce1461022b57806303f196911461025b5780630700037d1461028b575b5f80fd5b610215600480360381019061021091906122e7565b6106b1565b604051610222919061232a565b60405180910390f35b6102456004803603810190610240919061236d565b6107ab565b604051610252919061232a565b60405180910390f35b61027560048036038101906102709190612414565b610880565b604051610282919061232a565b60405180910390f35b6102a560048036038101906102a091906122e7565b61092c565b6040516102b2919061232a565b60405180910390f35b6102c3610941565b6040516102d0919061232a565b60405180910390f35b6102e1610947565b6040516102ee919061232a565b60405180910390f35b6102ff61096b565b60405161030c919061232a565b60405180910390f35b61032f600480360381019061032a91906124c5565b610971565b60405161033c919061232a565b60405180910390f35b61034d610b2d565b60405161035a91906125bd565b60405180910390f35b61037d600480360381019061037891906125d6565b610b51565b60405161038a919061232a565b60405180910390f35b61039b610c25565b6040516103a89190612610565b60405180910390f35b6103b9610c83565b6040516103c6919061232a565b60405180910390f35b6103d7610d17565b6040516103e4919061232a565b60405180910390f35b6103f5610d80565b604051610402919061232a565b60405180910390f35b6104256004803603810190610420919061236d565b610d86565b604051610432919061232a565b60405180910390f35b610455600480360381019061045091906122e7565b610d9a565b604051610462919061232a565b60405180910390f35b610473610dae565b6040516104809190612610565b60405180910390f35b610491610dd2565b60405161049e919061232a565b60405180910390f35b6104af610df6565b6040516104bc919061232a565b60405180910390f35b6104df60048036038101906104da91906122e7565b610dfc565b6040516104ec919061232a565b60405180910390f35b61050f600480360381019061050a91906122e7565b610e11565b60405161051c919061232a565b60405180910390f35b61052d610e26565b60405161053a919061232a565b60405180910390f35b61054b610e2c565b604051610558919061232a565b60405180910390f35b610569610f9f565b604051610576919061232a565b60405180910390f35b610587610fa5565b6040516105949190612610565b60405180910390f35b6105b760048036038101906105b291906125d6565b610fc9565b6040516105c4919061232a565b60405180910390f35b6105d5610fdc565b6040516105e2919061232a565b60405180910390f35b6105f3610fe2565b604051610600919061232a565b60405180910390f35b61061161108c565b60405161061e919061232a565b60405180910390f35b61062f611092565b60405161063c919061232a565b60405180910390f35b61065f600480360381019061065a9190612629565b611098565b60405161066c919061269c565b60405180910390f35b61067d6111dc565b60405161068a919061232a565b60405180910390f35b61069b6111e2565b6040516106a891906126d5565b60405180910390f35b5f670de0b6b3a7640000600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610701610d17565b61070b919061271b565b5f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610752919061274e565b61075c91906127bc565b600c5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546107a491906127ec565b9050919050565b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205483111561082b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082290612879565b60405180910390fd5b5f831161086d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610864906128e1565b60405180910390fd5b610878338484611206565b905092915050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d505accf883089898989896040518863ffffffff1660e01b81526004016108e6979695949392919061290e565b5f604051808303815f87803b1580156108fd575f80fd5b505af115801561090f573d5f803e3d5ffd5b5050505061091e338a8a6113b8565b905098975050505050505050565b600c602052805f5260405f205f915090505481565b600a5481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015481565b5f428510156109b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ac906129c5565b60405180910390fd5b5f600e5f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190610a03906129e3565b9190505590505f7f1d21d85fa9c48f6f8d66450e031b8b5654ac1b9c2bd36f4b1fe91b39c095e3be8a8a8a858b604051602001610a4596959493929190612a2a565b6040516020818303038152906040528051906020012090505f610a6a82888888611098565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610ad357508a73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610b12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0990612ad3565b60405180910390fd5b610b1d8b8b8b611206565b9350505050979650505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054821115610bd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc890612879565b60405180910390fd5b5f8211610c13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0a906128e1565b60405180910390fd5b610c1e338333611206565b9050919050565b5f7f00000000000000000000000000000000000000000000000000000000000000004603610c75577f00000000000000000000000000000000000000000000000000000000000000009050610c80565b610c7d61163a565b90505b90565b5f805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610d06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfd906128e1565b60405180910390fd5b610d11338233611206565b91505090565b5f8060015403610d2b57600a549050610d7d565b600a54600154670de0b6b3a7640000600854600954610d486116ab565b610d52919061271b565b610d5c919061274e565b610d66919061274e565b610d7091906127bc565b610d7a91906127ec565b90505b90565b60025481565b5f610d923384846113b8565b905092915050565b5f602052805f5260405f205f915090505481565b7f1d21d85fa9c48f6f8d66450e031b8b5654ac1b9c2bd36f4b1fe91b39c095e3be81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60085481565b600e602052805f5260405f205f915090505481565b600b602052805f5260405f205f915090505481565b60045481565b5f8060015403610e3e575f9050610f9c565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166399530b066040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ea8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ecc9190612b05565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f25919061269c565b602060405180830381865afa158015610f40573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f649190612b05565b610f6e919061274e565b9050600154600254600154610f83919061271b565b82610f8e919061274e565b610f9891906127bc565b9150505b90565b60055481565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f610fd53383336113b8565b9050919050565b60095481565b5f611087337f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401611042929190612b30565b602060405180830381865afa15801561105d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110819190612b05565b336113b8565b905090565b60065481565b60035481565b5f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0825f1c11156110fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f590612ba1565b60405180910390fd5b601b8460ff1614806111135750601c8460ff16145b611152576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114990612c09565b60405180910390fd5b5f61115b610c25565b8660405160200161116d929190612c9b565b6040516020818303038152906040528051906020012090506001818686866040515f81526020016040526040516111a79493929190612cd1565b6020604051602081039080840390855afa1580156111c7573d5f803e3d5ffd5b50505060206040510351915050949350505050565b60075481565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f806001547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611264919061269c565b602060405180830381865afa15801561127f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112a39190612b05565b856112ae919061274e565b6112b891906127bc565b90506112c485856116bd565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1662f714ce83306040518363ffffffff1660e01b815260040161131f929190612d14565b6020604051808303815f875af115801561133b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061135f9190612b05565b90506113ac84827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166117ed9092919063ffffffff16565b80925050509392505050565b5f6040518060400160405280600781526020017f6465706f736974000000000000000000000000000000000000000000000000008152505f816040516020016114019190612d9d565b604051602081830303815290604052805190602001205f1c905061142481611873565b15826040516020016114369190612e23565b60405160208183030381529060405290611486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147d9190612e8c565b60405180910390fd5b50611492816001611898565b3073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614611513576115128630877f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166118e0909392919063ffffffff16565b5b61157e7f0000000000000000000000000000000000000000000000000000000000000000867f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166119699092919063ffffffff16565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b6b55f25876040518263ffffffff1660e01b81526004016115d8919061232a565b6020604051808303815f875af11580156115f4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116189190612b05565b90506116248582611a78565b935050611631815f611898565b50509392505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611664611b6b565b80519060200120611673611ba8565b805190602001204630604051602001611690959493929190612eac565b60405160208183030381529060405280519060200120905090565b5f6116b842600754611be5565b905090565b816116c6610d17565b600a819055506116d46116ab565b6009819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461179c57611716816106b1565b600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550600a54600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f82116117de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d590612f47565b60405180910390fd5b6117e88383611bfd565b505050565b61186e8363a9059cbb60e01b848460405160240161180c929190612f65565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611e11565b505050565b5f80610100836118839190612f8c565b6001901b90508081600d541614915050919050565b80156118bf57610100826118ac9190612f8c565b6001901b600d5417600d819055506118dc565b610100826118cd9190612f8c565b6001901b600d5418600d819055505b5050565b611963846323b872dd60e01b85858560405160240161190193929190612fbc565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611e11565b50505050565b5f8373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b81526004016119a5929190612b30565b602060405180830381865afa1580156119c0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119e49190612b05565b9050611a728463095ea7b360e01b8585856119ff91906127ec565b604051602401611a10929190612f65565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611e11565b50505050565b5f82611a82610d17565b600a81905550611a906116ab565b6009819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611b5857611ad2816106b1565b600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550600a54600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b611b628484611ed7565b91505092915050565b60606040518060400160405280600c81526020017f596561726e466565506f6f6c0000000000000000000000000000000000000000815250905090565b60606040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250905090565b5f818310611bf35781611bf5565b825b905092915050565b5f8111611c3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c3690613014565b60405180910390fd5b5f60055403611c83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7a90613014565b60405180910390fd5b5f60015411611cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cbe90613014565b60405180910390fd5b5f6301e1338060055442611cdb919061271b565b600454611ce8919061274e565b611cf291906127bc565b90508060025f828254611d0591906127ec565b925050819055508060015f828254611d1d91906127ec565b925050819055505f600154118015611d36575080600154115b15611d6a5780600154611d49919061271b565b600154600654611d59919061274e565b611d6391906127bc565b6006819055505b815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254611db5919061271b565b925050819055508160015f828254611dcd919061271b565b9250508190555042600581905550620186a0600354600254600154611df2919061271b565b611dfc919061274e565b611e0691906127bc565b600481905550505050565b5f611e72826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166120c49092919063ffffffff16565b90505f81511480611e93575080806020019051810190611e929190613067565b5b611ed2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ec990613102565b60405180910390fd5b505050565b5f808211611f1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f1190613014565b60405180910390fd5b5f806005541480611f2c57505f600154145b80611f3b575060015460025410155b15611f6857670de0b6b3a764000060065484611f57919061274e565b611f6191906127bc565b9050612018565b5f6301e1338060055442611f7c919061271b565b600454611f89919061274e565b611f9391906127bc565b90508060025f828254611fa691906127ec565b925050819055508060015f828254611fbe91906127ec565b9250508190555080600154611fd3919061271b565b600154600654611fe3919061274e565b611fed91906127bc565b600681905550670de0b6b3a76400006006548561200a919061274e565b61201491906127bc565b9150505b805f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461206391906127ec565b925050819055508060015f82825461207b91906127ec565b9250508190555042600581905550620186a06003546002546001546120a0919061271b565b6120aa919061274e565b6120b491906127bc565b6004819055508091505092915050565b60606120d284845f856120db565b90509392505050565b606082471015612120576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161211790613190565b60405180910390fd5b5f808673ffffffffffffffffffffffffffffffffffffffff16858760405161214891906131f2565b5f6040518083038185875af1925050503d805f8114612182576040519150601f19603f3d011682016040523d82523d5f602084013e612187565b606091505b5091509150612198878383876121a4565b92505050949350505050565b60608315612205575f8351036121fd576121bd85612218565b6121fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121f390613252565b60405180910390fd5b5b829050612210565b61220f838361223a565b5b949350505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b5f8251111561224c5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122809190612e8c565b60405180910390fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6122b68261228d565b9050919050565b6122c6816122ac565b81146122d0575f80fd5b50565b5f813590506122e1816122bd565b92915050565b5f602082840312156122fc576122fb612289565b5b5f612309848285016122d3565b91505092915050565b5f819050919050565b61232481612312565b82525050565b5f60208201905061233d5f83018461231b565b92915050565b61234c81612312565b8114612356575f80fd5b50565b5f8135905061236781612343565b92915050565b5f806040838503121561238357612382612289565b5b5f61239085828601612359565b92505060206123a1858286016122d3565b9150509250929050565b5f60ff82169050919050565b6123c0816123ab565b81146123ca575f80fd5b50565b5f813590506123db816123b7565b92915050565b5f819050919050565b6123f3816123e1565b81146123fd575f80fd5b50565b5f8135905061240e816123ea565b92915050565b5f805f805f805f80610100898b03121561243157612430612289565b5b5f61243e8b828c01612359565b985050602061244f8b828c016122d3565b97505060406124608b828c016122d3565b96505060606124718b828c01612359565b95505060806124828b828c01612359565b94505060a06124938b828c016123cd565b93505060c06124a48b828c01612400565b92505060e06124b58b828c01612400565b9150509295985092959890939650565b5f805f805f805f60e0888a0312156124e0576124df612289565b5b5f6124ed8a828b016122d3565b97505060206124fe8a828b01612359565b965050604061250f8a828b016122d3565b95505060606125208a828b01612359565b94505060806125318a828b016123cd565b93505060a06125428a828b01612400565b92505060c06125538a828b01612400565b91505092959891949750929550565b5f819050919050565b5f61258561258061257b8461228d565b612562565b61228d565b9050919050565b5f6125968261256b565b9050919050565b5f6125a78261258c565b9050919050565b6125b78161259d565b82525050565b5f6020820190506125d05f8301846125ae565b92915050565b5f602082840312156125eb576125ea612289565b5b5f6125f884828501612359565b91505092915050565b61260a816123e1565b82525050565b5f6020820190506126235f830184612601565b92915050565b5f805f806080858703121561264157612640612289565b5b5f61264e87828801612400565b945050602061265f878288016123cd565b935050604061267087828801612400565b925050606061268187828801612400565b91505092959194509250565b612696816122ac565b82525050565b5f6020820190506126af5f83018461268d565b92915050565b5f6126bf8261258c565b9050919050565b6126cf816126b5565b82525050565b5f6020820190506126e85f8301846126c6565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61272582612312565b915061273083612312565b9250828203905081811115612748576127476126ee565b5b92915050565b5f61275882612312565b915061276383612312565b925082820261277181612312565b91508282048414831517612788576127876126ee565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6127c682612312565b91506127d183612312565b9250826127e1576127e061278f565b5b828204905092915050565b5f6127f682612312565b915061280183612312565b9250828201905080821115612819576128186126ee565b5b92915050565b5f82825260208201905092915050565b7f43616e2774207769746864726177206d6f7265207468616e206f776e656400005f82015250565b5f612863601e8361281f565b915061286e8261282f565b602082019050919050565b5f6020820190508181035f83015261289081612857565b9050919050565b7f43616e27742077697468647261772030000000000000000000000000000000005f82015250565b5f6128cb60108361281f565b91506128d682612897565b602082019050919050565b5f6020820190508181035f8301526128f8816128bf565b9050919050565b612908816123ab565b82525050565b5f60e0820190506129215f83018a61268d565b61292e602083018961268d565b61293b604083018861231b565b612948606083018761231b565b61295560808301866128ff565b61296260a0830185612601565b61296f60c0830184612601565b98975050505050505050565b7f5065726d697373696f6e206578706972656400000000000000000000000000005f82015250565b5f6129af60128361281f565b91506129ba8261297b565b602082019050919050565b5f6020820190508181035f8301526129dc816129a3565b9050919050565b5f6129ed82612312565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612a1f57612a1e6126ee565b5b600182019050919050565b5f60c082019050612a3d5f830189612601565b612a4a602083018861268d565b612a57604083018761231b565b612a64606083018661268d565b612a71608083018561231b565b612a7e60a083018461231b565b979650505050505050565b7f496e76616c6964207369676e61747572650000000000000000000000000000005f82015250565b5f612abd60118361281f565b9150612ac882612a89565b602082019050919050565b5f6020820190508181035f830152612aea81612ab1565b9050919050565b5f81519050612aff81612343565b92915050565b5f60208284031215612b1a57612b19612289565b5b5f612b2784828501612af1565b91505092915050565b5f604082019050612b435f83018561268d565b612b50602083018461268d565b9392505050565b7f496e76616c6964207369676e6174757265202773272076616c756500000000005f82015250565b5f612b8b601b8361281f565b9150612b9682612b57565b602082019050919050565b5f6020820190508181035f830152612bb881612b7f565b9050919050565b7f496e76616c6964207369676e6174757265202776272076616c756500000000005f82015250565b5f612bf3601b8361281f565b9150612bfe82612bbf565b602082019050919050565b5f6020820190508181035f830152612c2081612be7565b9050919050565b5f81905092915050565b7f19010000000000000000000000000000000000000000000000000000000000005f82015250565b5f612c65600283612c27565b9150612c7082612c31565b600282019050919050565b5f819050919050565b612c95612c90826123e1565b612c7b565b82525050565b5f612ca582612c59565b9150612cb18285612c84565b602082019150612cc18284612c84565b6020820191508190509392505050565b5f608082019050612ce45f830187612601565b612cf160208301866128ff565b612cfe6040830185612601565b612d0b6060830184612601565b95945050505050565b5f604082019050612d275f83018561231b565b612d34602083018461268d565b9392505050565b5f81519050919050565b5f5b83811015612d62578082015181840152602081019050612d47565b5f8484015250505050565b5f612d7782612d3b565b612d818185612c27565b9350612d91818560208601612d45565b80840191505092915050565b5f612da88284612d6d565b915081905092915050565b7f4d756c7469706c657865645265656e7472616e637947756172643a207265656e5f8201527f7472616e742063616c6c20000000000000000000000000000000000000000000602082015250565b5f612e0d602b83612c27565b9150612e1882612db3565b602b82019050919050565b5f612e2d82612e01565b9150612e398284612d6d565b915081905092915050565b5f601f19601f8301169050919050565b5f612e5e82612d3b565b612e68818561281f565b9350612e78818560208601612d45565b612e8181612e44565b840191505092915050565b5f6020820190508181035f830152612ea48184612e54565b905092915050565b5f60a082019050612ebf5f830188612601565b612ecc6020830187612601565b612ed96040830186612601565b612ee6606083018561231b565b612ef3608083018461268d565b9695505050505050565b7f43616e6e6f7420776974686472617720300000000000000000000000000000005f82015250565b5f612f3160118361281f565b9150612f3c82612efd565b602082019050919050565b5f6020820190508181035f830152612f5e81612f25565b9050919050565b5f604082019050612f785f83018561268d565b612f85602083018461231b565b9392505050565b5f612f9682612312565b9150612fa183612312565b925082612fb157612fb061278f565b5b828206905092915050565b5f606082019050612fcf5f83018661268d565b612fdc602083018561268d565b612fe9604083018461231b565b949350505050565b50565b5f612fff5f8361281f565b915061300a82612ff1565b5f82019050919050565b5f6020820190508181035f83015261302b81612ff4565b9050919050565b5f8115159050919050565b61304681613032565b8114613050575f80fd5b50565b5f815190506130618161303d565b92915050565b5f6020828403121561307c5761307b612289565b5b5f61308984828501613053565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e5f8201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b5f6130ec602a8361281f565b91506130f782613092565b604082019050919050565b5f6020820190508181035f830152613119816130e0565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f5f8201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b5f61317a60268361281f565b915061318582613120565b604082019050919050565b5f6020820190508181035f8301526131a78161316e565b9050919050565b5f81519050919050565b5f81905092915050565b5f6131cc826131ae565b6131d681856131b8565b93506131e6818560208601612d45565b80840191505092915050565b5f6131fd82846131c2565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f61323c601d8361281f565b915061324782613208565b602082019050919050565b5f6020820190508181035f83015261326981613230565b905091905056fea264697066735822122060568cbb23eea4ef9e80336e1c07fbfeb0ecff90d60ef529e50187fcfbc89e4264736f6c63430008150033";

type YearnFeePoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YearnFeePoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YearnFeePool__factory extends ContractFactory {
  constructor(...args: YearnFeePoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    vault_: string,
    want_: string,
    targetManagementFee_: BigNumberish,
    rewardDuration_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<YearnFeePool> {
    return super.deploy(
      vault_,
      want_,
      targetManagementFee_,
      rewardDuration_,
      overrides || {}
    ) as Promise<YearnFeePool>;
  }
  override getDeployTransaction(
    vault_: string,
    want_: string,
    targetManagementFee_: BigNumberish,
    rewardDuration_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      vault_,
      want_,
      targetManagementFee_,
      rewardDuration_,
      overrides || {}
    );
  }
  override attach(address: string): YearnFeePool {
    return super.attach(address) as YearnFeePool;
  }
  override connect(signer: Signer): YearnFeePool__factory {
    return super.connect(signer) as YearnFeePool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YearnFeePoolInterface {
    return new utils.Interface(_abi) as YearnFeePoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YearnFeePool {
    return new Contract(address, _abi, signerOrProvider) as YearnFeePool;
  }
}
