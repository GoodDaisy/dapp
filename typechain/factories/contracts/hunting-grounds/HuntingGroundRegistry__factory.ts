/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HuntingGroundRegistry,
  HuntingGroundRegistryInterface,
} from "../../../contracts/hunting-grounds/HuntingGroundRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "want",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "targetManagementFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardDuration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
    ],
    name: "RegisteredHuntingGround",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "huntingGrounds",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ground",
        type: "address",
      },
    ],
    name: "registerHuntingGround",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b5061002c61002161003160201b60201c565b61003860201b60201c565b6100f9565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610921806101065f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c806352eb54a014610059578063715018a61461008957806377756436146100935780638da5cb5b146100af578063f2fde38b146100cd575b5f80fd5b610073600480360381019061006e919061062f565b6100e9565b6040516100809190610699565b60405180910390f35b610091610124565b005b6100ad60048036038101906100a891906106dc565b610137565b005b6100b761014b565b6040516100c49190610699565b60405180910390f35b6100e760048036038101906100e291906106dc565b610172565b005b600181815481106100f8575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61012c6101f4565b6101355f610272565b565b61013f6101f4565b61014881610333565b50565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61017a6101f4565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101df90610787565b60405180910390fd5b6101f181610272565b50565b6101fc6105f1565b73ffffffffffffffffffffffffffffffffffffffff1661021a61014b565b73ffffffffffffffffffffffffffffffffffffffff1614610270576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610267906107ef565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600181908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f499071931a06eac9ecdc640354d3dbbe49170df5a53f86346deb3ba8bff1b0e98173ffffffffffffffffffffffffffffffffffffffff1663fbfa77cf6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103fd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104219190610821565b8273ffffffffffffffffffffffffffffffffffffffff16631f1fcd516040518163ffffffff1660e01b8152600401602060405180830381865afa15801561046a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061048e9190610821565b8373ffffffffffffffffffffffffffffffffffffffff1663dadd99716040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104d7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104fb9190610860565b8473ffffffffffffffffffffffffffffffffffffffff16630fb5a6b46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610544573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105689190610860565b8573ffffffffffffffffffffffffffffffffffffffff1663f7c618c16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105b1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105d59190610821565b6040516105e695949392919061089a565b60405180910390a150565b5f33905090565b5f80fd5b5f819050919050565b61060e816105fc565b8114610618575f80fd5b50565b5f8135905061062981610605565b92915050565b5f60208284031215610644576106436105f8565b5b5f6106518482850161061b565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106838261065a565b9050919050565b61069381610679565b82525050565b5f6020820190506106ac5f83018461068a565b92915050565b6106bb81610679565b81146106c5575f80fd5b50565b5f813590506106d6816106b2565b92915050565b5f602082840312156106f1576106f06105f8565b5b5f6106fe848285016106c8565b91505092915050565b5f82825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f610771602683610707565b915061077c82610717565b604082019050919050565b5f6020820190508181035f83015261079e81610765565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f6107d9602083610707565b91506107e4826107a5565b602082019050919050565b5f6020820190508181035f830152610806816107cd565b9050919050565b5f8151905061081b816106b2565b92915050565b5f60208284031215610836576108356105f8565b5b5f6108438482850161080d565b91505092915050565b5f8151905061085a81610605565b92915050565b5f60208284031215610875576108746105f8565b5b5f6108828482850161084c565b91505092915050565b610894816105fc565b82525050565b5f60a0820190506108ad5f83018861068a565b6108ba602083018761068a565b6108c7604083018661088b565b6108d4606083018561088b565b6108e1608083018461068a565b969550505050505056fea2646970667358221220a1be66ca18c2adf5956d23b65823be40c6f0fbd756a2536af0594836f3a8cf4864736f6c63430008150033";

type HuntingGroundRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HuntingGroundRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HuntingGroundRegistry__factory extends ContractFactory {
  constructor(...args: HuntingGroundRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<HuntingGroundRegistry> {
    return super.deploy(overrides || {}) as Promise<HuntingGroundRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HuntingGroundRegistry {
    return super.attach(address) as HuntingGroundRegistry;
  }
  override connect(signer: Signer): HuntingGroundRegistry__factory {
    return super.connect(signer) as HuntingGroundRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HuntingGroundRegistryInterface {
    return new utils.Interface(_abi) as HuntingGroundRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HuntingGroundRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as HuntingGroundRegistry;
  }
}
