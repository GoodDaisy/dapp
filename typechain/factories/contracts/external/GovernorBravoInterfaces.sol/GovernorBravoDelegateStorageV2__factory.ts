/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GovernorBravoDelegateStorageV2,
  GovernorBravoDelegateStorageV2Interface,
} from "../../../../contracts/external/GovernorBravoInterfaces.sol/GovernorBravoDelegateStorageV2";

const _abi = [
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "comp",
    outputs: [
      {
        internalType: "contract CompInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialProposalId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "latestProposalIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "eta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abstainVotes",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "canceled",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timelock",
    outputs: [
      {
        internalType: "contract TimelockInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistAccountExpirations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistGuardian",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b506107498061001d5f395ff3fe608060405234801561000f575f80fd5b50600436106100e8575f3560e01c80635c60da1b1161008a578063d33219b411610064578063d33219b414610257578063da35c66414610275578063f851a44014610293578063fc4eee42146102b1576100e8565b80635c60da1b146101fd578063b58131b01461021b578063c5a8425d14610239576100e8565b806317977c61116100c657806317977c6114610161578063267822471461019157806338bd0dda146101af5780633932abb1146101df576100e8565b8063013cf08b146100ec57806302a251a314610125578063109d0af814610143575b5f80fd5b610106600480360381019061010191906104b2565b6102cf565b60405161011c9a99989796959493929190610545565b60405180910390f35b61012d610357565b60405161013a91906105df565b60405180910390f35b61014b61035d565b6040516101589190610653565b60405180910390f35b61017b60048036038101906101769190610696565b610382565b60405161018891906105df565b60405180910390f35b610199610397565b6040516101a691906106c1565b60405180910390f35b6101c960048036038101906101c49190610696565b6103bc565b6040516101d691906105df565b60405180910390f35b6101e76103d1565b6040516101f491906105df565b60405180910390f35b6102056103d7565b60405161021291906106c1565b60405180910390f35b6102236103fc565b60405161023091906105df565b60405180910390f35b610241610402565b60405161024e91906106c1565b60405180910390f35b61025f610427565b60405161026c91906106fa565b60405180910390f35b61027d61044c565b60405161028a91906105df565b60405180910390f35b61029b610452565b6040516102a891906106c1565b60405180910390f35b6102b9610475565b6040516102c691906105df565b60405180910390f35b600a602052805f5260405f205f91509050805f015490806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600201549080600701549080600801549080600901549080600a01549080600b01549080600c015f9054906101000a900460ff169080600c0160019054906101000a900460ff1690508a565b60045481565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b602052805f5260405f205f915090505481565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c602052805f5260405f205f915090505481565b60035481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b5f80fd5b5f819050919050565b6104918161047f565b811461049b575f80fd5b50565b5f813590506104ac81610488565b92915050565b5f602082840312156104c7576104c661047b565b5b5f6104d48482850161049e565b91505092915050565b6104e68161047f565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610515826104ec565b9050919050565b6105258161050b565b82525050565b5f8115159050919050565b61053f8161052b565b82525050565b5f610140820190506105595f83018d6104dd565b610566602083018c61051c565b610573604083018b6104dd565b610580606083018a6104dd565b61058d60808301896104dd565b61059a60a08301886104dd565b6105a760c08301876104dd565b6105b460e08301866104dd565b6105c2610100830185610536565b6105d0610120830184610536565b9b9a5050505050505050505050565b5f6020820190506105f25f8301846104dd565b92915050565b5f819050919050565b5f61061b610616610611846104ec565b6105f8565b6104ec565b9050919050565b5f61062c82610601565b9050919050565b5f61063d82610622565b9050919050565b61064d81610633565b82525050565b5f6020820190506106665f830184610644565b92915050565b6106758161050b565b811461067f575f80fd5b50565b5f813590506106908161066c565b92915050565b5f602082840312156106ab576106aa61047b565b5b5f6106b884828501610682565b91505092915050565b5f6020820190506106d45f83018461051c565b92915050565b5f6106e482610622565b9050919050565b6106f4816106da565b82525050565b5f60208201905061070d5f8301846106eb565b9291505056fea26469706673582212209ace45dc5c59e58adadb64c8669db779a025c633d985be0da47a4aab1854c56b64736f6c63430008150033";

type GovernorBravoDelegateStorageV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernorBravoDelegateStorageV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernorBravoDelegateStorageV2__factory extends ContractFactory {
  constructor(...args: GovernorBravoDelegateStorageV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<GovernorBravoDelegateStorageV2> {
    return super.deploy(
      overrides || {}
    ) as Promise<GovernorBravoDelegateStorageV2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GovernorBravoDelegateStorageV2 {
    return super.attach(address) as GovernorBravoDelegateStorageV2;
  }
  override connect(signer: Signer): GovernorBravoDelegateStorageV2__factory {
    return super.connect(signer) as GovernorBravoDelegateStorageV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernorBravoDelegateStorageV2Interface {
    return new utils.Interface(_abi) as GovernorBravoDelegateStorageV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernorBravoDelegateStorageV2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GovernorBravoDelegateStorageV2;
  }
}
