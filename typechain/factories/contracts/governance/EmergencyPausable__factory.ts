/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EmergencyPausable,
  EmergencyPausableInterface,
} from "../../../contracts/governance/EmergencyPausable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b5061002c61002161004a60201b60201c565b61005160201b60201c565b5f8060146101000a81548160ff021916908315150217905550610112565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610b3a8061011f5f395ff3fe608060405234801561000f575f80fd5b5060043610610060575f3560e01c80633f4ba83a146100645780635c975abb1461006e578063715018a61461008c5780638456cb59146100965780638da5cb5b146100a0578063f2fde38b146100be575b5f80fd5b61006c6100da565b005b61007661026e565b6040516100839190610797565b60405180910390f35b610094610283565b005b61009e610296565b005b6100a861042a565b6040516100b591906107ef565b60405180910390f35b6100d860048036038101906100d39190610836565b610451565b005b6100e26104d3565b73ffffffffffffffffffffffffffffffffffffffff166349fc85576040518163ffffffff1660e01b8152600401602060405180830381865afa15801561012a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061014e9190610875565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610225575061018a6104d3565b73ffffffffffffffffffffffffffffffffffffffff1663d33219b46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101d2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101f69190610875565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610264576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025b90610920565b60405180910390fd5b61026c6104e1565b565b5f8060149054906101000a900460ff16905090565b61028b610542565b6102945f6105c0565b565b61029e6104d3565b73ffffffffffffffffffffffffffffffffffffffff166349fc85576040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102e6573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061030a9190610875565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806103e157506103466104d3565b73ffffffffffffffffffffffffffffffffffffffff1663d33219b46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561038e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103b29190610875565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610420576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041790610920565b60405180910390fd5b610428610681565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610459610542565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104be906109ae565b60405180910390fd5b6104d0816105c0565b50565b5f6104dc61042a565b905090565b6104e96106e3565b5f8060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61052b61072c565b60405161053891906107ef565b60405180910390a1565b61054a61072c565b73ffffffffffffffffffffffffffffffffffffffff1661056861042a565b73ffffffffffffffffffffffffffffffffffffffff16146105be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b590610a16565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610689610733565b60015f60146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586106cc61072c565b6040516106d991906107ef565b60405180910390a1565b6106eb61026e565b61072a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072190610a7e565b60405180910390fd5b565b5f33905090565b61073b61026e565b1561077b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077290610ae6565b60405180910390fd5b565b5f8115159050919050565b6107918161077d565b82525050565b5f6020820190506107aa5f830184610788565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107d9826107b0565b9050919050565b6107e9816107cf565b82525050565b5f6020820190506108025f8301846107e0565b92915050565b5f80fd5b610815816107cf565b811461081f575f80fd5b50565b5f813590506108308161080c565b92915050565b5f6020828403121561084b5761084a610808565b5b5f61085884828501610822565b91505092915050565b5f8151905061086f8161080c565b92915050565b5f6020828403121561088a57610889610808565b5b5f61089784828501610861565b91505092915050565b5f82825260208201905092915050565b7f4f6e6c7920656d657267656e637920676f7665726e6f72206f7220676f7665725f8201527f6e6f72206d61792063616c6c20746869732066756e6374696f6e2e0000000000602082015250565b5f61090a603b836108a0565b9150610915826108b0565b604082019050919050565b5f6020820190508181035f830152610937816108fe565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f6109986026836108a0565b91506109a38261093e565b604082019050919050565b5f6020820190508181035f8301526109c58161098c565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f610a006020836108a0565b9150610a0b826109cc565b602082019050919050565b5f6020820190508181035f830152610a2d816109f4565b9050919050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f610a686014836108a0565b9150610a7382610a34565b602082019050919050565b5f6020820190508181035f830152610a9581610a5c565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f610ad06010836108a0565b9150610adb82610a9c565b602082019050919050565b5f6020820190508181035f830152610afd81610ac4565b905091905056fea2646970667358221220426a3f8ca15d66575ab3231e290345c5e42ab76622053d702cc5d637146e192b64736f6c63430008150033";

type EmergencyPausableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EmergencyPausableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EmergencyPausable__factory extends ContractFactory {
  constructor(...args: EmergencyPausableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<EmergencyPausable> {
    return super.deploy(overrides || {}) as Promise<EmergencyPausable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EmergencyPausable {
    return super.attach(address) as EmergencyPausable;
  }
  override connect(signer: Signer): EmergencyPausable__factory {
    return super.connect(signer) as EmergencyPausable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EmergencyPausableInterface {
    return new utils.Interface(_abi) as EmergencyPausableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EmergencyPausable {
    return new Contract(address, _abi, signerOrProvider) as EmergencyPausable;
  }
}
