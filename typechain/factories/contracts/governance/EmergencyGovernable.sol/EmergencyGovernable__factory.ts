/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EmergencyGovernable,
  EmergencyGovernableInterface,
} from "../../../../contracts/governance/EmergencyGovernable.sol/EmergencyGovernable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b5061002c61002161003160201b60201c565b61003860201b60201c565b6100f9565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610476806101065f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063715018a6146100435780638da5cb5b1461004d578063f2fde38b1461006b575b5f80fd5b61004b610087565b005b61005561009a565b60405161006291906102c8565b60405180910390f35b6100856004803603810190610080919061030f565b6100c1565b005b61008f610143565b6100985f6101c1565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6100c9610143565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610137576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012e906103ba565b60405180910390fd5b610140816101c1565b50565b61014b610282565b73ffffffffffffffffffffffffffffffffffffffff1661016961009a565b73ffffffffffffffffffffffffffffffffffffffff16146101bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b690610422565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102b282610289565b9050919050565b6102c2816102a8565b82525050565b5f6020820190506102db5f8301846102b9565b92915050565b5f80fd5b6102ee816102a8565b81146102f8575f80fd5b50565b5f81359050610309816102e5565b92915050565b5f60208284031215610324576103236102e1565b5b5f610331848285016102fb565b91505092915050565b5f82825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f6103a460268361033a565b91506103af8261034a565b604082019050919050565b5f6020820190508181035f8301526103d181610398565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f61040c60208361033a565b9150610417826103d8565b602082019050919050565b5f6020820190508181035f83015261043981610400565b905091905056fea26469706673582212207a0725d6304390b2be1ed898f9fc523ed19d6e0545175531b0b1549cca63335664736f6c63430008150033";

type EmergencyGovernableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EmergencyGovernableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EmergencyGovernable__factory extends ContractFactory {
  constructor(...args: EmergencyGovernableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<EmergencyGovernable> {
    return super.deploy(overrides || {}) as Promise<EmergencyGovernable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EmergencyGovernable {
    return super.attach(address) as EmergencyGovernable;
  }
  override connect(signer: Signer): EmergencyGovernable__factory {
    return super.connect(signer) as EmergencyGovernable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EmergencyGovernableInterface {
    return new utils.Interface(_abi) as EmergencyGovernableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EmergencyGovernable {
    return new Contract(address, _abi, signerOrProvider) as EmergencyGovernable;
  }
}
