/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ITimelock,
  ITimelockInterface,
} from "../../../contracts/TahoDeployer.sol/ITimelock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pendingAdmin_",
        type: "address",
      },
    ],
    name: "setPendingAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ITimelock__factory {
  static readonly abi = _abi;
  static createInterface(): ITimelockInterface {
    return new utils.Interface(_abi) as ITimelockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITimelock {
    return new Contract(address, _abi, signerOrProvider) as ITimelock;
  }
}
