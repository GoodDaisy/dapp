/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExpiringMerkleDistributor,
  ExpiringMerkleDistributorInterface,
} from "../../../contracts/distributors/ExpiringMerkleDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "startTime_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "clawBack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61010060405234801562000011575f80fd5b5060405162001e8c38038062001e8c8339818101604052810190620000379190620002da565b83838173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508060a081815250505050620000976200008b6200013b60201b60201c565b6200014260201b60201c565b818111620000dc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000d390620003f3565b60405180910390fd5b42811162000121576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001189062000487565b60405180910390fd5b8160c081815250508060e0818152505050505050620004a7565b5f33905090565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620002348262000209565b9050919050565b620002468162000228565b811462000251575f80fd5b50565b5f8151905062000264816200023b565b92915050565b5f819050919050565b6200027e816200026a565b811462000289575f80fd5b50565b5f815190506200029c8162000273565b92915050565b5f819050919050565b620002b681620002a2565b8114620002c1575f80fd5b50565b5f81519050620002d481620002ab565b92915050565b5f805f8060808587031215620002f557620002f462000205565b5b5f620003048782880162000254565b945050602062000317878288016200028c565b93505060406200032a87828801620002c4565b92505060606200033d87828801620002c4565b91505092959194509250565b5f82825260208201905092915050565b7f4578706972696e674d65726b6c654469737472696275746f723a2044697374725f8201527f69627574696f6e2063616e277420656e64206265666f7265206974207374617260208201527f7473000000000000000000000000000000000000000000000000000000000000604082015250565b5f620003db60428362000349565b9150620003e88262000359565b606082019050919050565b5f6020820190508181035f8301526200040c81620003cd565b9050919050565b7f4578706972696e674d65726b6c654469737472696275746f723a2044697374725f8201527f69627574696f6e2063616e277420656e6420696e207468652070617374000000602082015250565b5f6200046f603d8362000349565b91506200047c8262000413565b604082019050919050565b5f6020820190508181035f830152620004a08162000461565b9050919050565b60805160a05160c05160e0516119806200050c5f395f8181610217015281816102b101526102dd01525f81816101b5015261043601525f818161028d015261063201525f8181610343015281816103db0152818161055301526106a101526119805ff3fe608060405234801561000f575f80fd5b506004361061009c575f3560e01c806378e979251161006457806378e979251461010c5780638da5cb5b1461012a5780639e34070f14610148578063f2fde38b14610178578063fc0c546a146101945761009c565b80632e7ba6ef146100a05780632eb4a7ab146100bc5780633197cbb6146100da57806357888c29146100f8578063715018a614610102575b5f80fd5b6100ba60048036038101906100b59190610e05565b6101b2565b005b6100c461028b565b6040516100d19190610ea1565b60405180910390f35b6100e26102af565b6040516100ef9190610ec9565b60405180910390f35b6101006102d3565b005b61010a610421565b005b610114610434565b6040516101219190610ec9565b60405180910390f35b610132610458565b60405161013f9190610ef1565b60405180910390f35b610162600480360381019061015d9190610f0a565b610480565b60405161016f9190610f4f565b60405180910390f35b610192600480360381019061018d9190610f68565b6104cf565b005b61019c610551565b6040516101a99190610ef1565b60405180910390f35b427f00000000000000000000000000000000000000000000000000000000000000001115610215576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020c90611013565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000004210610277576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026e906110a1565b60405180910390fd5b6102848585858585610575565b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6102db6107bc565b7f0000000000000000000000000000000000000000000000000000000000000000421161033d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033490611155565b60405180910390fd5b61041f337f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161039a9190610ef1565b602060405180830381865afa1580156103b5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103d99190611187565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661083a9092919063ffffffff16565b565b6104296107bc565b6104325f6108c0565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f8061010083610490919061120c565b90505f610100846104a1919061123c565b90505f805f8481526020019081526020015f205490505f826001901b90508081831614945050505050919050565b6104d76107bc565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610545576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053c906112dc565b60405180910390fd5b61054e816108c0565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b61057e85610480565b156105be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b59061136a565b60405180910390fd5b5f8585856040516020016105d4939291906113ed565b6040516020818303038152906040528051906020012090506106578383808060200260200160405190810160405280939291908181526020018383602002808284375f81840152601f19601f820116905080830192505050505050507f000000000000000000000000000000000000000000000000000000000000000083610983565b610696576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068d90611499565b60405180910390fd5b61069f86610999565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86866040518363ffffffff1660e01b81526004016106fa9291906114b7565b6020604051808303815f875af1158015610716573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061073a9190611508565b610779576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610770906115a3565b60405180910390fd5b7f4ec90e965519d92681267467f775ada5bd214aa92c0dc93d90a5e880ce9ed0268686866040516107ac939291906115c1565b60405180910390a1505050505050565b6107c46109eb565b73ffffffffffffffffffffffffffffffffffffffff166107e2610458565b73ffffffffffffffffffffffffffffffffffffffff1614610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f90611640565b60405180910390fd5b565b6108bb8363a9059cbb60e01b84846040516024016108599291906114b7565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506109f2565b505050565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f8261098f8584610ab8565b1490509392505050565b5f610100826109a8919061120c565b90505f610100836109b9919061123c565b9050806001901b5f808481526020019081526020015f2054175f808481526020019081526020015f2081905550505050565b5f33905090565b5f610a53826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610b0c9092919063ffffffff16565b90505f81511480610a74575080806020019051810190610a739190611508565b5b610ab3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aaa906116ce565b60405180910390fd5b505050565b5f808290505f5b8451811015610b0157610aec82868381518110610adf57610ade6116ec565b5b6020026020010151610b23565b91508080610af990611719565b915050610abf565b508091505092915050565b6060610b1a84845f85610b4d565b90509392505050565b5f818310610b3a57610b358284610c16565b610b45565b610b448383610c16565b5b905092915050565b606082471015610b92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b89906117d0565b60405180910390fd5b5f808673ffffffffffffffffffffffffffffffffffffffff168587604051610bba919061185a565b5f6040518083038185875af1925050503d805f8114610bf4576040519150601f19603f3d011682016040523d82523d5f602084013e610bf9565b606091505b5091509150610c0a87838387610c2a565b92505050949350505050565b5f825f528160205260405f20905092915050565b60608315610c8b575f835103610c8357610c4385610c9e565b610c82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c79906118ba565b60405180910390fd5b5b829050610c96565b610c958383610cc0565b5b949350505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b5f82511115610cd25781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d06919061192a565b60405180910390fd5b5f80fd5b5f80fd5b5f819050919050565b610d2981610d17565b8114610d33575f80fd5b50565b5f81359050610d4481610d20565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d7382610d4a565b9050919050565b610d8381610d69565b8114610d8d575f80fd5b50565b5f81359050610d9e81610d7a565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112610dc557610dc4610da4565b5b8235905067ffffffffffffffff811115610de257610de1610da8565b5b602083019150836020820283011115610dfe57610dfd610dac565b5b9250929050565b5f805f805f60808688031215610e1e57610e1d610d0f565b5b5f610e2b88828901610d36565b9550506020610e3c88828901610d90565b9450506040610e4d88828901610d36565b935050606086013567ffffffffffffffff811115610e6e57610e6d610d13565b5b610e7a88828901610db0565b92509250509295509295909350565b5f819050919050565b610e9b81610e89565b82525050565b5f602082019050610eb45f830184610e92565b92915050565b610ec381610d17565b82525050565b5f602082019050610edc5f830184610eba565b92915050565b610eeb81610d69565b82525050565b5f602082019050610f045f830184610ee2565b92915050565b5f60208284031215610f1f57610f1e610d0f565b5b5f610f2c84828501610d36565b91505092915050565b5f8115159050919050565b610f4981610f35565b82525050565b5f602082019050610f625f830184610f40565b92915050565b5f60208284031215610f7d57610f7c610d0f565b5b5f610f8a84828501610d90565b91505092915050565b5f82825260208201905092915050565b7f4578706972696e674d65726b6c654469737472696275746f723a204e6f7420795f8201527f6574206f70656e20746f20636c61696d00000000000000000000000000000000602082015250565b5f610ffd603083610f93565b915061100882610fa3565b604082019050919050565b5f6020820190508181035f83015261102a81610ff1565b9050919050565b7f4578706972696e674d65726b6c654469737472696275746f723a20436c61696d5f8201527f2068617320657870697265640000000000000000000000000000000000000000602082015250565b5f61108b602c83610f93565b915061109682611031565b604082019050919050565b5f6020820190508181035f8301526110b88161107f565b9050919050565b7f4578706972696e674d65726b6c654469737472696275746f723a2043616e206f5f8201527f6e6c7920636c6177206261636b20746f6b656e7320616674657220657870697260208201527f6174696f6e000000000000000000000000000000000000000000000000000000604082015250565b5f61113f604583610f93565b915061114a826110bf565b606082019050919050565b5f6020820190508181035f83015261116c81611133565b9050919050565b5f8151905061118181610d20565b92915050565b5f6020828403121561119c5761119b610d0f565b5b5f6111a984828501611173565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61121682610d17565b915061122183610d17565b925082611231576112306111b2565b5b828204905092915050565b5f61124682610d17565b915061125183610d17565b925082611261576112606111b2565b5b828206905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f6112c6602683610f93565b91506112d18261126c565b604082019050919050565b5f6020820190508181035f8301526112f3816112ba565b9050919050565b7f4d65726b6c654469737472696275746f723a2044726f7020616c7265616479205f8201527f636c61696d65642e000000000000000000000000000000000000000000000000602082015250565b5f611354602883610f93565b915061135f826112fa565b604082019050919050565b5f6020820190508181035f83015261138181611348565b9050919050565b5f819050919050565b6113a261139d82610d17565b611388565b82525050565b5f8160601b9050919050565b5f6113be826113a8565b9050919050565b5f6113cf826113b4565b9050919050565b6113e76113e282610d69565b6113c5565b82525050565b5f6113f88286611391565b60208201915061140882856113d6565b6014820191506114188284611391565b602082019150819050949350505050565b7f4d65726b6c654469737472696275746f723a20496e76616c69642070726f6f665f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f611483602183610f93565b915061148e82611429565b604082019050919050565b5f6020820190508181035f8301526114b081611477565b9050919050565b5f6040820190506114ca5f830185610ee2565b6114d76020830184610eba565b9392505050565b6114e781610f35565b81146114f1575f80fd5b50565b5f81519050611502816114de565b92915050565b5f6020828403121561151d5761151c610d0f565b5b5f61152a848285016114f4565b91505092915050565b7f4d65726b6c654469737472696275746f723a205472616e73666572206661696c5f8201527f65642e0000000000000000000000000000000000000000000000000000000000602082015250565b5f61158d602383610f93565b915061159882611533565b604082019050919050565b5f6020820190508181035f8301526115ba81611581565b9050919050565b5f6060820190506115d45f830186610eba565b6115e16020830185610ee2565b6115ee6040830184610eba565b949350505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f61162a602083610f93565b9150611635826115f6565b602082019050919050565b5f6020820190508181035f8301526116578161161e565b9050919050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e5f8201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b5f6116b8602a83610f93565b91506116c38261165e565b604082019050919050565b5f6020820190508181035f8301526116e5816116ac565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61172382610d17565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611755576117546111df565b5b600182019050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f5f8201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b5f6117ba602683610f93565b91506117c582611760565b604082019050919050565b5f6020820190508181035f8301526117e7816117ae565b9050919050565b5f81519050919050565b5f81905092915050565b5f5b8381101561181f578082015181840152602081019050611804565b5f8484015250505050565b5f611834826117ee565b61183e81856117f8565b935061184e818560208601611802565b80840191505092915050565b5f611865828461182a565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f6118a4601d83610f93565b91506118af82611870565b602082019050919050565b5f6020820190508181035f8301526118d181611898565b9050919050565b5f81519050919050565b5f601f19601f8301169050919050565b5f6118fc826118d8565b6119068185610f93565b9350611916818560208601611802565b61191f816118e2565b840191505092915050565b5f6020820190508181035f83015261194281846118f2565b90509291505056fea26469706673582212203c1269d867889b073b320481cacb3e6043e5be91f119da7f8ead2df5db31bb1a64736f6c63430008150033";

type ExpiringMerkleDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExpiringMerkleDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExpiringMerkleDistributor__factory extends ContractFactory {
  constructor(...args: ExpiringMerkleDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    token_: string,
    merkleRoot_: BytesLike,
    startTime_: BigNumberish,
    endTime_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ExpiringMerkleDistributor> {
    return super.deploy(
      token_,
      merkleRoot_,
      startTime_,
      endTime_,
      overrides || {}
    ) as Promise<ExpiringMerkleDistributor>;
  }
  override getDeployTransaction(
    token_: string,
    merkleRoot_: BytesLike,
    startTime_: BigNumberish,
    endTime_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token_,
      merkleRoot_,
      startTime_,
      endTime_,
      overrides || {}
    );
  }
  override attach(address: string): ExpiringMerkleDistributor {
    return super.attach(address) as ExpiringMerkleDistributor;
  }
  override connect(signer: Signer): ExpiringMerkleDistributor__factory {
    return super.connect(signer) as ExpiringMerkleDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExpiringMerkleDistributorInterface {
    return new utils.Interface(_abi) as ExpiringMerkleDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExpiringMerkleDistributor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExpiringMerkleDistributor;
  }
}
