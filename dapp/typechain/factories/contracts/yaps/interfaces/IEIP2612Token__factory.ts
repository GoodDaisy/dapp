/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IEIP2612Token,
  IEIP2612TokenInterface,
} from "../../../../contracts/yaps/interfaces/IEIP2612Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IEIP2612Token__factory {
  static readonly abi = _abi;
  static createInterface(): IEIP2612TokenInterface {
    return new utils.Interface(_abi) as IEIP2612TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IEIP2612Token {
    return new Contract(address, _abi, signerOrProvider) as IEIP2612Token;
  }
}
