/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ApprovalTarget,
  ApprovalTargetInterface,
} from "../../../contracts/yaps/ApprovalTarget";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_AND_TRANSFER_FROM_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cachedChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cachedDomainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permitAndTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "typeHashDigest",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "recoverFromTypeHashSignature",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801562000010575f80fd5b504660808181525050620000296200003d60201b60201c565b60a0818152505060015f819055506200020c565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6200006f620000c060201b60201c565b8051906020012062000086620000fd60201b60201c565b805190602001204630604051602001620000a5959493929190620001b1565b60405160208183030381529060405280519060200120905090565b60606040518060400160405280600e81526020017f417070726f76616c546172676574000000000000000000000000000000000000815250905090565b60606040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250905090565b5f819050919050565b6200014e816200013a565b82525050565b5f819050919050565b620001688162000154565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000199826200016e565b9050919050565b620001ab816200018d565b82525050565b5f60a082019050620001c65f83018862000143565b620001d5602083018762000143565b620001e4604083018662000143565b620001f360608301856200015d565b620002026080830184620001a0565b9695505050505050565b60805160a0516114126200023c5f395f8181610389015261041c01525f818161036201526103e301526114125ff3fe608060405234801561000f575f80fd5b506004361061007b575f3560e01c8063771da5c511610059578063771da5c5146100d75780637ecebe00146100f5578063b4f94b2e14610125578063e3989046146101435761007b565b8063326b57f31461007f5780633644e5151461009b5780634a4c7be8146100b9575b5f80fd5b61009960048036038101906100949190610ad1565b610173565b005b6100a361035f565b6040516100b09190610b91565b60405180910390f35b6100c16103bd565b6040516100ce9190610b91565b60405180910390f35b6100df6103e1565b6040516100ec9190610bb9565b60405180910390f35b61010f600480360381019061010a9190610bd2565b610405565b60405161011c9190610bb9565b60405180910390f35b61012d61041a565b60405161013a9190610b91565b60405180910390f35b61015d60048036038101906101589190610bfd565b61043e565b60405161016a9190610c70565b60405180910390f35b61017b610582565b428410156101be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b590610ce3565b60405180910390fd5b5f60015f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f81548092919061020c90610d2e565b9190505590505f7f449fa1d8520f78a8b4a6fec9f7dfbe75326a76b126ca2df9edc5e8c6ea95dfce8a8a338a868b6040516020016102509796959493929190610d75565b6040516020818303038152906040528051906020012090505f6102758287878761043e565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156102de57508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b61031d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031490610e2c565b60405180910390fd5b61034a8a8a8a8e73ffffffffffffffffffffffffffffffffffffffff166105cf909392919063ffffffff16565b505050610355610658565b5050505050505050565b5f7f000000000000000000000000000000000000000000000000000000000000000046036103af577f000000000000000000000000000000000000000000000000000000000000000090506103ba565b6103b7610661565b90505b90565b7f449fa1d8520f78a8b4a6fec9f7dfbe75326a76b126ca2df9edc5e8c6ea95dfce81565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001602052805f5260405f205f915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0825f1c11156104a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049b90610e94565b60405180910390fd5b601b8460ff1614806104b95750601c8460ff16145b6104f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ef90610efc565b60405180910390fd5b5f61050161035f565b86604051602001610513929190610f8e565b6040516020818303038152906040528051906020012090506001818686866040515f815260200160405260405161054d9493929190610fd3565b6020604051602081039080840390855afa15801561056d573d5f803e3d5ffd5b50505060206040510351915050949350505050565b60025f54036105c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bd90611060565b60405180910390fd5b60025f81905550565b610652846323b872dd60e01b8585856040516024016105f09392919061107e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106d2565b50505050565b60015f81905550565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61068b610798565b8051906020012061069a6107d5565b8051906020012046306040516020016106b79594939291906110b3565b60405160208183030381529060405280519060200120905090565b5f610733826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166108129092919063ffffffff16565b90505f815114806107545750808060200190518101906107539190611139565b5b610793576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078a906111d4565b60405180910390fd5b505050565b60606040518060400160405280600e81526020017f417070726f76616c546172676574000000000000000000000000000000000000815250905090565b60606040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250905090565b606061082084845f85610829565b90509392505050565b60608247101561086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086590611262565b60405180910390fd5b5f808673ffffffffffffffffffffffffffffffffffffffff16858760405161089691906112ec565b5f6040518083038185875af1925050503d805f81146108d0576040519150601f19603f3d011682016040523d82523d5f602084013e6108d5565b606091505b50915091506108e6878383876108f2565b92505050949350505050565b60608315610953575f83510361094b5761090b85610966565b61094a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109419061134c565b60405180910390fd5b5b82905061095e565b61095d8383610988565b5b949350505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b5f8251111561099a5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ce91906113bc565b60405180910390fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a04826109db565b9050919050565b610a14816109fa565b8114610a1e575f80fd5b50565b5f81359050610a2f81610a0b565b92915050565b5f819050919050565b610a4781610a35565b8114610a51575f80fd5b50565b5f81359050610a6281610a3e565b92915050565b5f60ff82169050919050565b610a7d81610a68565b8114610a87575f80fd5b50565b5f81359050610a9881610a74565b92915050565b5f819050919050565b610ab081610a9e565b8114610aba575f80fd5b50565b5f81359050610acb81610aa7565b92915050565b5f805f805f805f80610100898b031215610aee57610aed6109d7565b5b5f610afb8b828c01610a21565b9850506020610b0c8b828c01610a21565b9750506040610b1d8b828c01610a21565b9650506060610b2e8b828c01610a54565b9550506080610b3f8b828c01610a54565b94505060a0610b508b828c01610a8a565b93505060c0610b618b828c01610abd565b92505060e0610b728b828c01610abd565b9150509295985092959890939650565b610b8b81610a9e565b82525050565b5f602082019050610ba45f830184610b82565b92915050565b610bb381610a35565b82525050565b5f602082019050610bcc5f830184610baa565b92915050565b5f60208284031215610be757610be66109d7565b5b5f610bf484828501610a21565b91505092915050565b5f805f8060808587031215610c1557610c146109d7565b5b5f610c2287828801610abd565b9450506020610c3387828801610a8a565b9350506040610c4487828801610abd565b9250506060610c5587828801610abd565b91505092959194509250565b610c6a816109fa565b82525050565b5f602082019050610c835f830184610c61565b92915050565b5f82825260208201905092915050565b7f5065726d697373696f6e206578706972656400000000000000000000000000005f82015250565b5f610ccd601283610c89565b9150610cd882610c99565b602082019050919050565b5f6020820190508181035f830152610cfa81610cc1565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d3882610a35565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d6a57610d69610d01565b5b600182019050919050565b5f60e082019050610d885f83018a610b82565b610d956020830189610c61565b610da26040830188610c61565b610daf6060830187610c61565b610dbc6080830186610baa565b610dc960a0830185610baa565b610dd660c0830184610baa565b98975050505050505050565b7f496e76616c6964207369676e61747572650000000000000000000000000000005f82015250565b5f610e16601183610c89565b9150610e2182610de2565b602082019050919050565b5f6020820190508181035f830152610e4381610e0a565b9050919050565b7f496e76616c6964207369676e6174757265202773272076616c756500000000005f82015250565b5f610e7e601b83610c89565b9150610e8982610e4a565b602082019050919050565b5f6020820190508181035f830152610eab81610e72565b9050919050565b7f496e76616c6964207369676e6174757265202776272076616c756500000000005f82015250565b5f610ee6601b83610c89565b9150610ef182610eb2565b602082019050919050565b5f6020820190508181035f830152610f1381610eda565b9050919050565b5f81905092915050565b7f19010000000000000000000000000000000000000000000000000000000000005f82015250565b5f610f58600283610f1a565b9150610f6382610f24565b600282019050919050565b5f819050919050565b610f88610f8382610a9e565b610f6e565b82525050565b5f610f9882610f4c565b9150610fa48285610f77565b602082019150610fb48284610f77565b6020820191508190509392505050565b610fcd81610a68565b82525050565b5f608082019050610fe65f830187610b82565b610ff36020830186610fc4565b6110006040830185610b82565b61100d6060830184610b82565b95945050505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61104a601f83610c89565b915061105582611016565b602082019050919050565b5f6020820190508181035f8301526110778161103e565b9050919050565b5f6060820190506110915f830186610c61565b61109e6020830185610c61565b6110ab6040830184610baa565b949350505050565b5f60a0820190506110c65f830188610b82565b6110d36020830187610b82565b6110e06040830186610b82565b6110ed6060830185610baa565b6110fa6080830184610c61565b9695505050505050565b5f8115159050919050565b61111881611104565b8114611122575f80fd5b50565b5f815190506111338161110f565b92915050565b5f6020828403121561114e5761114d6109d7565b5b5f61115b84828501611125565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e5f8201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b5f6111be602a83610c89565b91506111c982611164565b604082019050919050565b5f6020820190508181035f8301526111eb816111b2565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f5f8201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b5f61124c602683610c89565b9150611257826111f2565b604082019050919050565b5f6020820190508181035f83015261127981611240565b9050919050565b5f81519050919050565b5f81905092915050565b5f5b838110156112b1578082015181840152602081019050611296565b5f8484015250505050565b5f6112c682611280565b6112d0818561128a565b93506112e0818560208601611294565b80840191505092915050565b5f6112f782846112bc565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f611336601d83610c89565b915061134182611302565b602082019050919050565b5f6020820190508181035f8301526113638161132a565b9050919050565b5f81519050919050565b5f601f19601f8301169050919050565b5f61138e8261136a565b6113988185610c89565b93506113a8818560208601611294565b6113b181611374565b840191505092915050565b5f6020820190508181035f8301526113d48184611384565b90509291505056fea2646970667358221220177f889fb09168b5c57d02bcba69ce3c845b8a1938295384b5888b327961f8be64736f6c63430008150033";

type ApprovalTargetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ApprovalTargetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ApprovalTarget__factory extends ContractFactory {
  constructor(...args: ApprovalTargetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ApprovalTarget> {
    return super.deploy(overrides || {}) as Promise<ApprovalTarget>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ApprovalTarget {
    return super.attach(address) as ApprovalTarget;
  }
  override connect(signer: Signer): ApprovalTarget__factory {
    return super.connect(signer) as ApprovalTarget__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ApprovalTargetInterface {
    return new utils.Interface(_abi) as ApprovalTargetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ApprovalTarget {
    return new Contract(address, _abi, signerOrProvider) as ApprovalTarget;
  }
}
