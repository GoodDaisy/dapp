/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ITransferRestricted,
  ITransferRestrictedInterface,
} from "../../../contracts/token/ITransferRestricted";

const _abi = [
  {
    inputs: [],
    name: "disableTransferRestriction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "unrestrictedAccount",
        type: "address",
      },
    ],
    name: "removeAccountRestriction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
    ],
    name: "removeDestinationRestriction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "unpauser_",
        type: "address",
      },
    ],
    name: "setUnpauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpauser",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ITransferRestricted__factory {
  static readonly abi = _abi;
  static createInterface(): ITransferRestrictedInterface {
    return new utils.Interface(_abi) as ITransferRestrictedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITransferRestricted {
    return new Contract(address, _abi, signerOrProvider) as ITransferRestricted;
  }
}
