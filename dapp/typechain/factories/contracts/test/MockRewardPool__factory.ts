/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockRewardPool,
  MockRewardPoolInterface,
} from "../../../contracts/test/MockRewardPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "rewardToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "wrappedToken_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "targetManagementFee_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "accruedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRateLastUpdated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerShareStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sharesPerDepositedUnderlying",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetManagementFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "topUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerSharePaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sharesToWithdraw",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrappedToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526107d0600355670de0b6b3a76400006006555f6007555f6008553480156200002a575f80fd5b506040516200221038038062002210833981810160405281019062000050919062000276565b62093a80818160808181525050806003819055505050620000866200007a6200010f60201b60201c565b6200011660201b60201c565b82600e5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620002cf565b5f33905090565b5f600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600d5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200020882620001dd565b9050919050565b6200021a81620001fc565b811462000225575f80fd5b50565b5f8151905062000238816200020f565b92915050565b5f819050919050565b62000252816200023e565b81146200025d575f80fd5b50565b5f81519050620002708162000247565b92915050565b5f805f6060848603121562000290576200028f620001d9565b5b5f6200029f8682870162000228565b9350506020620002b28682870162000228565b9250506040620002c58682870162000260565b9150509250925092565b608051611f13620002fd5f395f81816105a501528181610d3601528181610d6d0152610dcc0152611f135ff3fe608060405234801561000f575f80fd5b5060043610610170575f3560e01c80637b0a47ee116100dc578063b6b55f2511610095578063dadd99711161006f578063dadd997114610418578063ebe2b12b14610436578063f2fde38b14610454578063f7c618c11461047057610170565b8063b6b55f25146103ac578063c8f33c91146103dc578063d957e4af146103fa57610170565b80637b0a47ee146102e6578063818ae1ce146103045780638da5cb5b14610334578063978bbdb914610352578063996c6cc314610370578063aee837271461038e57610170565b80633d18b9121161012e5780633d18b9121461024a578063446a2ec81461025457806350017f3e14610272578063682c20581461028e57806370a08231146102ac578063715018a6146102dc57610170565b80628cc262146101745780630700037d146101a45780630ab747f0146101d45780630fb5a6b4146101f257806318160ddd146102105780632e1a7d4d1461022e575b5f80fd5b61018e6004803603810190610189919061173d565b61048e565b60405161019b9190611780565b60405180910390f35b6101be60048036038101906101b9919061173d565b610588565b6040516101cb9190611780565b60405180910390f35b6101dc61059d565b6040516101e99190611780565b60405180910390f35b6101fa6105a3565b6040516102079190611780565b60405180910390f35b6102186105c7565b6040516102259190611780565b60405180910390f35b610248600480360381019061024391906117c3565b6105cd565b005b6102526106db565b005b61025c610778565b6040516102699190611780565b60405180910390f35b61028c600480360381019061028791906117c3565b6107e1565b005b61029661083b565b6040516102a39190611780565b60405180910390f35b6102c660048036038101906102c1919061173d565b610841565b6040516102d39190611780565b60405180910390f35b6102e4610855565b005b6102ee610868565b6040516102fb9190611780565b60405180910390f35b61031e6004803603810190610319919061173d565b61086e565b60405161032b9190611780565b60405180910390f35b61033c610883565b60405161034991906117fd565b60405180910390f35b61035a6108ab565b6040516103679190611780565b60405180910390f35b6103786108b1565b6040516103859190611871565b60405180910390f35b6103966108d6565b6040516103a39190611780565b60405180910390f35b6103c660048036038101906103c191906117c3565b6108dc565b6040516103d39190611780565b60405180910390f35b6103e461093c565b6040516103f19190611780565b60405180910390f35b610402610942565b60405161040f9190611780565b60405180910390f35b610420610948565b60405161042d9190611780565b60405180910390f35b61043e61094e565b60405161044b9190611780565b60405180910390f35b61046e6004803603810190610469919061173d565b610954565b005b6104786109d6565b6040516104859190611871565b60405180910390f35b5f670de0b6b3a7640000600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546104de610778565b6104e891906118b7565b5f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461052f91906118ea565b6105399190611958565b600c5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546105819190611988565b9050919050565b600c602052805f5260405f205f915090505481565b600a5481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015481565b5f60015490506105dd33836109fb565b6106d7338284600f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161063d91906117fd565b602060405180830381865afa158015610658573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061067c91906119cf565b61068691906118ea565b6106909190611958565b600f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610b2b9092919063ffffffff16565b5050565b5f6106e53361048e565b90505f600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506107753382600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610b2b9092919063ffffffff16565b50565b5f806001540361078c57600a5490506107de565b600a54600154670de0b6b3a76400006008546009546107a9610bb1565b6107b391906118b7565b6107bd91906118ea565b6107c791906118ea565b6107d19190611958565b6107db9190611988565b90505b90565b61082f333083600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610bc3909392919063ffffffff16565b61083881610c4c565b50565b60025481565b5f602052805f5260405f205f915090505481565b61085d610e00565b6108665f610e7e565b565b60085481565b600b602052805f5260405f205f915090505481565b5f600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60045481565b600f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b5f61092b333084600f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610bc3909392919063ffffffff16565b6109353383610f41565b9050919050565b60095481565b60065481565b60035481565b60075481565b61095c610e00565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c190611a7a565b60405180910390fd5b6109d381610e7e565b50565b600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b81610a04610778565b600a81905550610a12610bb1565b6009819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ada57610a548161048e565b600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550600a54600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f8211610b1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1390611ae2565b60405180910390fd5b610b268383611034565b505050565b610bac8363a9059cbb60e01b8484604051602401610b4a929190611b00565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611248565b505050565b5f610bbe4260075461130e565b905090565b610c46846323b872dd60e01b858585604051602401610be493929190611b27565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611248565b50505050565b5f610c55610778565b600a81905550610c63610bb1565b6009819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d2b57610ca58161048e565b600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550600a54600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b6007544210610d6b577f000000000000000000000000000000000000000000000000000000000000000082610d609190611958565b600881905550610dc3565b7f00000000000000000000000000000000000000000000000000000000000000008260085442600754610d9e91906118b7565b610da891906118ea565b610db29190611988565b610dbc9190611958565b6008819055505b426009819055507f000000000000000000000000000000000000000000000000000000000000000042610df69190611988565b6007819055505050565b610e08611326565b73ffffffffffffffffffffffffffffffffffffffff16610e26610883565b73ffffffffffffffffffffffffffffffffffffffff1614610e7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7390611ba6565b60405180910390fd5b565b5f600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600d5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f82610f4b610778565b600a81905550610f59610bb1565b6009819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461102157610f9b8161048e565b600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550600a54600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b61102b848461132d565b91505092915050565b5f8111611076576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106d90611be7565b60405180910390fd5b5f600554036110ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b190611be7565b60405180910390fd5b5f600154116110fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f590611be7565b60405180910390fd5b5f6301e133806005544261111291906118b7565b60045461111f91906118ea565b6111299190611958565b90508060025f82825461113c9190611988565b925050819055508060015f8282546111549190611988565b925050819055505f60015411801561116d575080600154115b156111a1578060015461118091906118b7565b60015460065461119091906118ea565b61119a9190611958565b6006819055505b815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546111ec91906118b7565b925050819055508160015f82825461120491906118b7565b9250508190555042600581905550620186a060035460025460015461122991906118b7565b61123391906118ea565b61123d9190611958565b600481905550505050565b5f6112a9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661151a9092919063ffffffff16565b90505f815114806112ca5750808060200190518101906112c99190611c3a565b5b611309576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130090611cd5565b60405180910390fd5b505050565b5f81831061131c578161131e565b825b905092915050565b5f33905090565b5f808211611370576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136790611be7565b60405180910390fd5b5f80600554148061138257505f600154145b80611391575060015460025410155b156113be57670de0b6b3a7640000600654846113ad91906118ea565b6113b79190611958565b905061146e565b5f6301e13380600554426113d291906118b7565b6004546113df91906118ea565b6113e99190611958565b90508060025f8282546113fc9190611988565b925050819055508060015f8282546114149190611988565b925050819055508060015461142991906118b7565b60015460065461143991906118ea565b6114439190611958565b600681905550670de0b6b3a76400006006548561146091906118ea565b61146a9190611958565b9150505b805f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546114b99190611988565b925050819055508060015f8282546114d19190611988565b9250508190555042600581905550620186a06003546002546001546114f691906118b7565b61150091906118ea565b61150a9190611958565b6004819055508091505092915050565b606061152884845f85611531565b90509392505050565b606082471015611576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156d90611d63565b60405180910390fd5b5f808673ffffffffffffffffffffffffffffffffffffffff16858760405161159e9190611ded565b5f6040518083038185875af1925050503d805f81146115d8576040519150601f19603f3d011682016040523d82523d5f602084013e6115dd565b606091505b50915091506115ee878383876115fa565b92505050949350505050565b6060831561165b575f835103611653576116138561166e565b611652576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164990611e4d565b60405180910390fd5b5b829050611666565b6116658383611690565b5b949350505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b5f825111156116a25781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d69190611ebd565b60405180910390fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61170c826116e3565b9050919050565b61171c81611702565b8114611726575f80fd5b50565b5f8135905061173781611713565b92915050565b5f60208284031215611752576117516116df565b5b5f61175f84828501611729565b91505092915050565b5f819050919050565b61177a81611768565b82525050565b5f6020820190506117935f830184611771565b92915050565b6117a281611768565b81146117ac575f80fd5b50565b5f813590506117bd81611799565b92915050565b5f602082840312156117d8576117d76116df565b5b5f6117e5848285016117af565b91505092915050565b6117f781611702565b82525050565b5f6020820190506118105f8301846117ee565b92915050565b5f819050919050565b5f61183961183461182f846116e3565b611816565b6116e3565b9050919050565b5f61184a8261181f565b9050919050565b5f61185b82611840565b9050919050565b61186b81611851565b82525050565b5f6020820190506118845f830184611862565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118c182611768565b91506118cc83611768565b92508282039050818111156118e4576118e361188a565b5b92915050565b5f6118f482611768565b91506118ff83611768565b925082820261190d81611768565b915082820484148315176119245761192361188a565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61196282611768565b915061196d83611768565b92508261197d5761197c61192b565b5b828204905092915050565b5f61199282611768565b915061199d83611768565b92508282019050808211156119b5576119b461188a565b5b92915050565b5f815190506119c981611799565b92915050565b5f602082840312156119e4576119e36116df565b5b5f6119f1848285016119bb565b91505092915050565b5f82825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f611a646026836119fa565b9150611a6f82611a0a565b604082019050919050565b5f6020820190508181035f830152611a9181611a58565b9050919050565b7f43616e6e6f7420776974686472617720300000000000000000000000000000005f82015250565b5f611acc6011836119fa565b9150611ad782611a98565b602082019050919050565b5f6020820190508181035f830152611af981611ac0565b9050919050565b5f604082019050611b135f8301856117ee565b611b206020830184611771565b9392505050565b5f606082019050611b3a5f8301866117ee565b611b4760208301856117ee565b611b546040830184611771565b949350505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f611b906020836119fa565b9150611b9b82611b5c565b602082019050919050565b5f6020820190508181035f830152611bbd81611b84565b9050919050565b50565b5f611bd25f836119fa565b9150611bdd82611bc4565b5f82019050919050565b5f6020820190508181035f830152611bfe81611bc7565b9050919050565b5f8115159050919050565b611c1981611c05565b8114611c23575f80fd5b50565b5f81519050611c3481611c10565b92915050565b5f60208284031215611c4f57611c4e6116df565b5b5f611c5c84828501611c26565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e5f8201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b5f611cbf602a836119fa565b9150611cca82611c65565b604082019050919050565b5f6020820190508181035f830152611cec81611cb3565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f5f8201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b5f611d4d6026836119fa565b9150611d5882611cf3565b604082019050919050565b5f6020820190508181035f830152611d7a81611d41565b9050919050565b5f81519050919050565b5f81905092915050565b5f5b83811015611db2578082015181840152602081019050611d97565b5f8484015250505050565b5f611dc782611d81565b611dd18185611d8b565b9350611de1818560208601611d95565b80840191505092915050565b5f611df88284611dbd565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f611e37601d836119fa565b9150611e4282611e03565b602082019050919050565b5f6020820190508181035f830152611e6481611e2b565b9050919050565b5f81519050919050565b5f601f19601f8301169050919050565b5f611e8f82611e6b565b611e9981856119fa565b9350611ea9818560208601611d95565b611eb281611e75565b840191505092915050565b5f6020820190508181035f830152611ed58184611e85565b90509291505056fea2646970667358221220295b214889ccfc4f5c9a9056bbd1d8a9901311261b0e15627eb4f0cbba00d7d264736f6c63430008150033";

type MockRewardPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockRewardPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockRewardPool__factory extends ContractFactory {
  constructor(...args: MockRewardPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    rewardToken_: string,
    wrappedToken_: string,
    targetManagementFee_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<MockRewardPool> {
    return super.deploy(
      rewardToken_,
      wrappedToken_,
      targetManagementFee_,
      overrides || {}
    ) as Promise<MockRewardPool>;
  }
  override getDeployTransaction(
    rewardToken_: string,
    wrappedToken_: string,
    targetManagementFee_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      rewardToken_,
      wrappedToken_,
      targetManagementFee_,
      overrides || {}
    );
  }
  override attach(address: string): MockRewardPool {
    return super.attach(address) as MockRewardPool;
  }
  override connect(signer: Signer): MockRewardPool__factory {
    return super.connect(signer) as MockRewardPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockRewardPoolInterface {
    return new utils.Interface(_abi) as MockRewardPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockRewardPool {
    return new Contract(address, _abi, signerOrProvider) as MockRewardPool;
  }
}
