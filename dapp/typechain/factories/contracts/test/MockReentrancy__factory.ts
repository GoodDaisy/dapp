/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockReentrancy,
  MockReentrancyInterface,
} from "../../../contracts/test/MockReentrancy";

const _abi = [
  {
    inputs: [],
    name: "a",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "reenter",
        type: "bool",
      },
    ],
    name: "a",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "b",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "c",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "d",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "e",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "f",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "g",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040525f8055348015610012575f80fd5b50610966806100205f395ff3fe608060405234801561000f575f80fd5b5060043610610086575f3560e01c8063ae51c48411610059578063ae51c484146100b2578063c3da42b8146100ce578063e2179b8e146100d8578063ffae15ba146100e257610086565b80630dbe671f1461008a57806326121ff0146100945780634df7e3d01461009e5780638a054ac2146100a8575b5f80fd5b6100926100ec565b005b61009c6101dc565b005b6100a661023e565b005b6100b061032e565b005b6100cc60048036038101906100c79190610686565b610388565b005b6100d6610480565b005b6100e0610493565b005b6100ea610582565b005b6040518060400160405280600181526020017f61000000000000000000000000000000000000000000000000000000000000008152505f81604051602001610134919061071d565b604051602081830303815290604052805190602001205f1c9050610157816105e5565b158260405160200161016991906107a3565b604051602081830303815290604052906101b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b0919061081c565b60405180910390fd5b506101c5816001610609565b6101ce5f610388565b6101d8815f610609565b5050565b5f80541461021f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610216906108ac565b60405180910390fd5b61022a5f6001610609565b610232610582565b61023c5f80610609565b565b6040518060400160405280600181526020017f62000000000000000000000000000000000000000000000000000000000000008152505f81604051602001610286919061071d565b604051602081830303815290604052805190602001205f1c90506102a9816105e5565b15826040516020016102bb91906107a3565b6040516020818303038152906040529061030b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610302919061081c565b60405180910390fd5b50610317816001610609565b6103205f610388565b61032a815f610609565b5050565b5f805414610371576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610368906108ac565b60405180910390fd5b61037c5f6001610609565b6103865f80610609565b565b6040518060400160405280600181526020017f61000000000000000000000000000000000000000000000000000000000000008152505f816040516020016103d0919061071d565b604051602081830303815290604052805190602001205f1c90506103f3816105e5565b158260405160200161040591906107a3565b60405160208183030381529060405290610455576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044c919061081c565b60405180910390fd5b50610461816001610609565b8215610471576104705f610388565b5b61047b815f610609565b505050565b61048861023e565b6104915f610388565b565b6040518060400160405280600181526020017f67000000000000000000000000000000000000000000000000000000000000008152505f816040516020016104db919061071d565b604051602081830303815290604052805190602001205f1c90506104fe816105e5565b158260405160200161051091906107a3565b60405160208183030381529060405290610560576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610557919061081c565b60405180910390fd5b5061056c816001610609565b61057461032e565b61057e815f610609565b5050565b5f8054146105c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bc906108ac565b60405180910390fd5b6105d05f6001610609565b6105d95f610388565b6105e35f80610609565b565b5f80610100836105f59190610900565b6001901b905080815f541614915050919050565b801561062e576101008261061d9190610900565b6001901b5f54175f81905550610649565b6101008261063c9190610900565b6001901b5f54185f819055505b5050565b5f80fd5b5f8115159050919050565b61066581610651565b811461066f575f80fd5b50565b5f813590506106808161065c565b92915050565b5f6020828403121561069b5761069a61064d565b5b5f6106a884828501610672565b91505092915050565b5f81519050919050565b5f81905092915050565b5f5b838110156106e25780820151818401526020810190506106c7565b5f8484015250505050565b5f6106f7826106b1565b61070181856106bb565b93506107118185602086016106c5565b80840191505092915050565b5f61072882846106ed565b915081905092915050565b7f4d756c7469706c657865645265656e7472616e637947756172643a207265656e5f8201527f7472616e742063616c6c20000000000000000000000000000000000000000000602082015250565b5f61078d602b836106bb565b915061079882610733565b602b82019050919050565b5f6107ad82610781565b91506107b982846106ed565b915081905092915050565b5f82825260208201905092915050565b5f601f19601f8301169050919050565b5f6107ee826106b1565b6107f881856107c4565b93506108088185602086016106c5565b610811816107d4565b840191505092915050565b5f6020820190508181035f83015261083481846107e4565b905092915050565b7f4d756c7469706c657865645265656e7472616e637947756172643a207265656e5f8201527f7472616e742063616c6c00000000000000000000000000000000000000000000602082015250565b5f610896602a836107c4565b91506108a18261083c565b604082019050919050565b5f6020820190508181035f8301526108c38161088a565b9050919050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61090a826108ca565b9150610915836108ca565b925082610925576109246108d3565b5b82820690509291505056fea26469706673582212200cc2c7caa70c6e73b14a3f4d93dd6152f36258dbce9d3dddc0903e8c53c231bc64736f6c63430008150033";

type MockReentrancyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockReentrancyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockReentrancy__factory extends ContractFactory {
  constructor(...args: MockReentrancyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<MockReentrancy> {
    return super.deploy(overrides || {}) as Promise<MockReentrancy>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockReentrancy {
    return super.attach(address) as MockReentrancy;
  }
  override connect(signer: Signer): MockReentrancy__factory {
    return super.connect(signer) as MockReentrancy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockReentrancyInterface {
    return new utils.Interface(_abi) as MockReentrancyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockReentrancy {
    return new Contract(address, _abi, signerOrProvider) as MockReentrancy;
  }
}
